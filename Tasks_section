Task1:

Get two strings from user,

string1: wikipedia
string2: typescript

Identify middle chars of both strings

output: p  +  c   ===> ascii value of p + ascii value of c  ====>  198


Task2:

Get two integers from user

int1: 123
int2: 456

output: 123456579 (concatenation of int1,int2 and addition of two integers) 

Task3:

Collect three strings from user
String format: (name<space>float)

string1: "ravi 10.30"  
string2: "meghala 12.19"
string3: "Gokul 20.20"

split + indexing

10.30 + 12.19 + 20.20 ===> output 42.69

Task4:

Li1 = [2,3,4,5,[45,56,67,78,[111,222,333,[5555,3333,[10000,50000,"python","computer"],1111,7777,8888],444,555,666,777],89,23,34]]


Extract below values: 
5
56
222
50000
put
5555
7777
666
89
on
333
3333

Task5:

#create a dictionary
#{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "botany" from above dictionary
#Extract "gebra" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"

Task6:
Get two strings from user:

string1: python
String2: java

output ===> jythonpava64hv (string2 first letter + string1 except first letter + string1 first letter + string2 except first letter + len of str1 + len of string2 )

Task7:

Get two strings from user

string1:  master
string2:  python

Output:  mason  (Concatenation of first part of string1 + second part od string 2)

string1: encyclopedia
string2: social

output: encyclal

Task8:

Get two strings from user  example: "java" "groovy"
   java6groovy4
   
   "pi" "mathematics"  ===> pi15mahematics2
   
Task9:

Get two values (input) ===> number, string

#7 , "python" ===> pythonpythonpythonpythonpythonpythonpython777777

#3 , "perl"   ===> perlperlperl3333


Task10:

#get two strings from user  computer science  ==> input 

#step 1 ==> comPuter  sciEnce

#step 2 ===> concatenate both ==> comPutersciEnce

#step 3 ===> comPuteRsciEnce


=================
Conditional statements tasks:
=================


Get a number from user check whether postive or negative
Get a number from user check whether odd or even
Get a character from user check whether small case or upper case
Get a string from user check whether length is even or odd
Get list from user check whether length is odd or even

#program1
#Get one string from user
#extract middle letter of the string
#check whether middle letter is vowel or no

#program2
#Get one string from user
#Find the middle letter
#find ascii value for the middle letter
#check whether ascii value is odd or even

#program3:
#get one string from user
#check whether length of the string is odd or even

#program4:
#Get one string from user
#check whether string is palindrome or no

#program5:
#Get one mark from student
#mark 0 to 100 otherwise invalid mark

#50 + PASS otherwise FAIL
#90 to 100 ===> A  ==> Even + Odd -
#80 to 89 ===> B
#70 to 79 ===> C
#60 to 69 ===> D
#50 to 59 ===> E

#0 to 49 ===> FAIL


#93 ===> A-
#99 ===> A-
#88 ====> B+

#78

#VALID MARK
#PASS MARK
#B+

#program6

#hackerrank Write a function

#program7
#hackerrank Python If-Else

#program8 

#two strings from user
#string 1: python  ==> first + middle + last 
#string 2: ptn

#valid otherwise invalid

#program9:

#two strings from user

#mathematics ===> 4 vowels
#science ==> 3 vowels

#both are equal count or not equal

#program10

#get one integer from user
#armstrong or no (without using loops)

#153 ===> 1^3 + 5^3 + 3^3
#370 ===> 3^3 + 7^3 + 0^3
#371 ====> 3^3 + 7^3 + 1^3


#program 11:
#[123, 124, 125,]  length of list odd or even


#program12:
#Fizz buzz
#Get one number from user
#5
#Multiple of 3 ==> Fizz
#Multiple of 5 ===> buzz
#Multiple of 3 and 5 ===> Fizzbuzz
#None ==> Invalid number


========================
Loops
=========================

Task1:

Get a dynamic list from user

Task2:

Get a dynamic dictionary from user

Taks3: odd even sepe

Input:
Li1 = [3,4,5,2,7,8,9,10]

Output:
Li_odd = [3,5,7,9]
Li_even = [4,2,8,10]

#Li1 = [3,4,5,2,7,8,9,10]

Task4:

[4,-5,3,4,5,-6,-9]

get one list form user
separatre positive and negative


Taks5:


Get list of strings from user
separate it in to two lists with vowles and non vowels 

["hi","ggg","hello","ravi","bbbb","zzz","yyyy"]

No of elements with vowel: 4
No of elements without vowel: 3

Task6:

Get list of strings from user
separate it two list (with same first letter and last letter and othr)

["garg", "kohli", "rohitr", "ishan", "dhoni","dad"]

No of elements with same first letter and last letter: 3
Other List: 3

Task7:

fibonacci series

0,1,1,2,3,5,8,13,21,34,55,89,144


Task8:

153 = 1^3 + 5^3 + 3^3
Armstrong check


Task9:

prime or not


Task10:

get rwo strings from user:
anagram or not

#Two input strings
#pot
#top

#top
#pto

Task11:

sum of digits
Get one number from user:
322 ===> 7

524 => 11


Task12:

#multiples of a number 

#Get one integer from the user
#9 ==> 1,3,9
#11 ==> 1,11
#25 ==> 1,5,25
#16 ===> 1,2,4,8,16

=======================================================
November 20:
Tasks:
Functions:

Task1:

even parity

#collect one integer from user
#convert it to binary number
#calculate number of 1's

if number of 1's are even ===> even parity otherwose odd parity


Task2:

month from user

complete restrictions: december, january, march  ===> No nonveg
Partial restriction: august, september, november ===> get week day from user ==> friday/tuesday no nonveg Other days: Non veg
Other months: No restiction: Non veg



Task3:

input: get a colour user

VIBGYOR

INDIGO  ==> it's available in rainbow and colour number is 2

Rose  ==> IT's not available and no colour code



Task4:

physics chemistry maths (maximum 200  min 0  )

cutoff = phy/4 + chem/4 + maths/2

college selection

70-100 ===> college 5
100-125 ==> college 4
125 - 150 ==> college 3
150-190 ==> college 2
cutoff ===> 190-200 ==> college1

Others: Not eligible (0-70)
Others: < 0 or > 200 ===> Invalid mark

any one subject 200 : bronze medal
any two subject 200 : silver medal
all the three : gold medal

<70 in any one subject ===> no college, no cutoff, no grade

199, 199, 199  

Valid mark
pass mark
cutoff mark: 199
No medal
College 1

200 200 60

Valid mark
Fail mark
Cutoff mark: No cutoff
No medal
No college

205 100 105

Invalid mark


Task5:

Factorial using recursive function
















